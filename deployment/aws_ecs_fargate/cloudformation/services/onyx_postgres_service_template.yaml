AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  Environment:
    Type: String
  SecurityGroupName:
    Type: String
    Default: ecs-onyx-postgres
  SubnetIDs:
    Type: CommaDelimitedList
    Default: subnet-0af372d676f65b287,subnet-06721b79e2e51d22c
  VpcID:
    Type: String
    Default: vpc-098cfa79d637dabff

Resources:

  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Fn::ImportValue:
          Fn::Sub: "${Environment}-onyx-cluster-ECSClusterName"
      CapacityProviderStrategy:
        - CapacityProvider: FARGATE
          Base: 0
          Weight: 1
      TaskDefinition: !Ref OnyxPostgresTaskDefinition
      ServiceName: !Sub ${Environment}-onyx-postgres-service
      SchedulingStrategy: REPLICA
      DesiredCount: 1
      AvailabilityZoneRebalancing: ENABLED
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - Ref: SecurityGroup
          Subnets:
            Ref: SubnetIDs
      PlatformVersion: LATEST
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
      DeploymentController:
        Type: ECS
      ServiceConnectConfiguration:
        Enabled: false
      ServiceRegistries:
        - RegistryArn: !GetAtt ServiceDiscoveryService.Arn
      Tags:
        - Key: app
          Value: onyx
        - Key: service
          Value: onyx-postgres
        - Key: env
          Value: !Ref Environment
      EnableECSManagedTags: true

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Onyx SecurityGroup access to EFS mount and postgres.
      GroupName: !Sub ${Environment}-${SecurityGroupName}
      VpcId: !Ref VpcID
      SecurityGroupIngress:
        - FromPort: 5432
          ToPort: 5432
          IpProtocol: tcp
          CidrIp: 0.0.0.0/0
        - FromPort: 5432
          ToPort: 5432
          IpProtocol: tcp
          CidrIpv6: "::/0"
        - FromPort: 2049
          ToPort: 2049
          IpProtocol: tcp
          SourceSecurityGroupId:
            Fn::ImportValue:
              Fn::Sub: "${Environment}-onyx-efs-EFSSecurityGroupMountTargets"

  ServiceDiscoveryService:
    Type: "AWS::ServiceDiscovery::Service"
    Properties:
      Name: !Sub ${Environment}-onyx-postgres-service
      DnsConfig:
        DnsRecords:
          - Type: "A"
            TTL: 15
      NamespaceId:
        Fn::ImportValue:
          Fn::Sub: "${Environment}-onyx-cluster-OnyxNamespace"
      HealthCheckCustomConfig:
        FailureThreshold: 1

  OnyxPostgresTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${Environment}-OnyxPostgresTaskDefinition
      TaskRoleArn:
        Fn::ImportValue:
          Fn::Sub: "${Environment}-onyx-cluster-ECSTaskRole"
      ExecutionRoleArn:
        Fn::ImportValue:
          Fn::Sub: "${Environment}-onyx-cluster-ECSTaskExecutionRole"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: "1024"
      Memory: "3072"
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      Volumes:
        - Name: efs-volume-data
          EFSVolumeConfiguration:
            FilesystemId:
              Fn::ImportValue:
                Fn::Sub: "${Environment}-onyx-efs-OnyxEfsId"
            RootDirectory: "/"
            TransitEncryption: ENABLED
            AuthorizationConfig:
              AccessPointId:
                Fn::ImportValue:
                  Fn::Sub: "${Environment}-onyx-efs-PostgresDataEfsAccessPoint"
      ContainerDefinitions:
        - Name: onyx-postgres
          Image: postgres:15.2-alpine
          Cpu: 0
          Essential: true
          Command:
            - "-c"
            - "max_connections=250"
            - "-c"
            - "listen_addresses=*"
            - "-c"
            - "hba_file=/var/lib/postgresql/pg_hba.conf"
            - "-c"
            - "data_directory=/var/lib/postgresql/data"
            - "-c"
            - "config_file=/var/lib/postgresql/data/postgresql.conf"
            - "-c"
            - "ident_file=/var/lib/postgresql/data/pg_ident.conf"
          PortMappings:
            - Name: postgres
              ContainerPort: 5432
              HostPort: 5432
              Protocol: tcp
              AppProtocol: http
          Environment:
            - Name: POSTGRES_USER
              Value: postgres
            - Name: PGSSLMODE
              Value: require
            - Name: POSTGRES_DB
              Value: postgres
          Secrets:
            - Name: POSTGRES_PASSWORD
              ValueFrom: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${Environment}/postgres/user/password
          MountPoints:
            - SourceVolume: efs-volume-data
              ContainerPath: /var/lib/postgresql/data
              ReadOnly: false
            - SourceVolume: efs-volume-data
              ContainerPath: /var/lib/postgresql
              ReadOnly: false
          DependsOn:
            - ContainerName: s3-sync-container
              Condition: SUCCESS
          User: "1000"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/OnyxPostgresTaskDefinition
              mode: non-blocking
              awslogs-create-group: "true"
              max-buffer-size: "25m"
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
        - Name: s3-sync-container
          Image: amazon/aws-cli:latest
          Cpu: 128
          MemoryReservation: 256
          Essential: false
          EntryPoint:
            - ""
          Command:
            - "sh"
            - "-c"
            - !Sub "aws s3 cp s3://${Environment}-onyx-ecs-fargate-configs/postgres/pg_hba.conf /var/lib/postgresql/pg_hba.conf && exit 0 || exit 1"
          Environment:
            - Name: AWS_REGION
              Value: !Ref AWS::Region
          MountPoints:
            - SourceVolume: efs-volume-data
              ContainerPath: /var/lib/postgresql
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/OnyxPostgresS3ConfigsTaskDefinition
              mode: non-blocking
              awslogs-create-group: "true"
              max-buffer-size: "25m"
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
